<?xml version="1.0"?>
<!-- ====================================================================== 
     Dec 1, 2006 7:02:58 PM                                                        

     Test App   
     A simple test app
                   
     Constantiner (constantiner@gmail.com)                                                                
     ====================================================================== -->
<project 
	name="DepressionClient" 
	default="build"
	basedir=".">
	
    <property 
    	file="local.properties"/>
	<!-- dirs -->
	<property 
		name="flex.sdk.dir" 
		location="."/>
	
	<property 
		name="build.dir" 
		location="build/"/>
	<property 
		name="release.build.dir" 
		location="bin-release"/>
	<property 
		name="debug.build.dir" 
		location="bin"/>
	<property 
		name="lib.src" 
		location="lib/src/"/>
	<property 
			name="lib.swc" 
		location="lib/swc/"/>
	<property 
		name="flex.config.xml" 
		location="flex-config.xml"/>
	
	<!-- files -->
	<property 
		name="mxmlc.jar" 
		location="${flex.sdk.dir}/lib/mxmlc.jar"/>
	<property 
		name="main.application" 
		location="${src.dir}/${application.main}"/>
	<property 
		name="output.swf.name" 
		value="${application.name}"/>
	<property 
		name="main.application.release.out" 
		location="${release.build.dir}/${output.swf.name}.swf"/>
	<property 
		name="main.application.debug.out" 
		location="${debug.build.dir}/${output.swf.name}.swf"/>
	
	<!-- wrapper -->
	<property 
		name="wrapper.dir" 
		location="${flex.sdk.dir}/templates/express-installation-with-history"/>
	<property 
		name="output.html.name" 
		value="${output.swf.name}.html"/>
	<property 
		name="output.debug.html" 
		location="${debug.build.dir}/${output.html.name}"/>
	<property 
		name="output.release.html" 
		location="${release.build.dir}/${output.html.name}"/>

	<property 
		name="swf.width" 
		value="881"/>
	<property 
		name="swf.height" 
		value="471"/>
	<property 
		name="swf.debug.title" 
		value="Simple app debug version"/>
	<property 
		name="swf.release.title" 
		value="Simple app"/>
	<property 
		name="swf.version.major" 
		value="9"/>
	<property 
		name="swf.version.minor" 
		value="0"/>
	<property 
		name="swf.version.revision" 
		value="0"/>
	<property 
		name="swf.application" 
		value="${output.swf.name}"/>
	<property 
		name="swf.swf" 
		value="${output.swf.name}"/>
	<property 
		name="swf.bgcolor" 
		value="#FFFFFF"/>

    <description>
    	A simple test app
    </description>

    <!-- ================================= 
          target: build              
         ================================= -->
    <target 
    	name="build" 
    	depends="clear,
    			init,
    			compile.release,
    			compile.debug,
    			make.release.wrapper,
    			make.debug.wrapper" 
    	description="--> Stock charts application">
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: make.release.wrapper
         - - - - - - - - - - - - - - - - - -->
    <target 
    	name="make.release.wrapper">
    	<make.wrapper
    		width="${swf.width}"
    		height="${swf.height}"
    		title="${swf.release.title}"
    		version.major="${swf.version.major}"
    		version.minor="${swf.version.minor}"
    		version.revision="${swf.version.revision}"
    		application="${swf.application}}"
    		swf="${swf.swf}"
    		bgcolor="${swf.bgcolor}"
    		wrapper.dir="${wrapper.dir}"
    		output.dir="${release.build.dir}"
    		output.html="${output.release.html}" />
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: make.debug.wrapper
         - - - - - - - - - - - - - - - - - -->
    <target 
    	name="make.debug.wrapper">
    	<make.wrapper
    		width="${swf.width}"
    		height="${swf.height}"
    		title="${swf.debug.title}"
    		version.major="${swf.version.major}"
    		version.minor="${swf.version.minor}"
    		version.revision="${swf.version.revision}"
    		application="${swf.application}}"
    		swf="${swf.swf}"
    		bgcolor="${swf.bgcolor}"
    		wrapper.dir="${wrapper.dir}"
    		output.dir="${debug.build.dir}"
    		output.html="${output.debug.html}" />
    </target>

    <!-- - - - - - - - - - - - - - - - - - 
          target: compile.release
         - - - - - - - - - - - - - - - - - -->
    <target 
    	name="compile.release">
    	<mxmlc.compile
    		in="${main.application}"
    		out="${main.application.release.out}" />

    	<!--
    	<copy todir="${release.build.dir}/assets" overwrite="true">
   	  		<fileset dir="${assets.dir}"/>
		</copy>
		-->
    </target>
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: compile.debug
         - - - - - - - - - - - - - - - - - -->
    <target 
    	name="compile.debug">
    	<mxmlc.compile
    		in="${main.application}"
    		out="${main.application.debug.out}"
    		additional="-debug=true" />
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: clear                      
         - - - - - - - - - - - - - - - - - -->
    <target 
    	name="clear">
		<delete 
			failonerror="false">
			<fileset 
				dir="${build.dir}" 
				includes="**/*.*" />
		</delete>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: init                      
         - - - - - - - - - - - - - - - - - -->
    <target 
    	name="init">
    	<mkdir 
    		dir="${build.dir}"/>
    	<mkdir 
    		dir="${release.build.dir}"/>
    	<mkdir 
    		dir="${debug.build.dir}"/>
    </target>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: mxmlc.compile          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="mxmlc.compile">
        <attribute name="in" />
        <attribute name="out" />
    	<attribute 
    		name="config" 
    		default="${flex.config.xml}" />
    	<attribute 
    		name="additional"
    		default="" />
        <sequential>
        	<java
        		jar="${mxmlc.jar}"
        		fork="true"
        		maxmemory="512m"
        		failonerror="true">
        		<arg value="+flexlib=${flex.sdk.dir}/frameworks"/>
        		<arg value="-load-config=@{config}"/>
        		<arg value="-output=@{out}"/>
        		<arg line="@{additional}"/>
        		<arg value="@{in}" />
        	</java>
        </sequential>
    </macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: make.wrapper          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="make.wrapper">
        <attribute name="width" default="100%" />
        <attribute name="height" default="100%" />
        <attribute name="title" default="" />
        <attribute name="version.major" default="9" />
        <attribute name="version.minor" default="0" />
        <attribute name="version.revision" default="0" />
        <attribute name="application" default="" />
        <attribute name="swf" default="" />
        <attribute name="bgcolor" default="#869ca7" />
        <attribute name="wrapper.dir" />
        <attribute name="output.dir" />
        <attribute name="output.html" />
        <sequential>
        	<copy todir="@{output.dir}">
        		<fileset dir="@{wrapper.dir}">
    	    		<exclude name="**/index.template.html" />
        		</fileset>
        	</copy>
	    	<copy 
	    		file="@{wrapper.dir}/index.template.html"
	    		tofile="@{output.html}"
	    		overwrite="true" />
        	<replaceregexp 
        		file="@{output.html}"
        		flags="gs"
        		match="\$\{width\}"
        		replace="@{width}"/>
        	<replaceregexp 
        		file="@{output.html}"
        		flags="gs"
        		match="\$\{height\}"
        		replace="@{height}"/>
        	<replaceregexp 
        		file="@{output.html}"
        		flags="gs"
        		match="\$\{title\}"
        		replace="@{title}"
        		encoding="utf-8"/>
        	<replaceregexp 
        		file="@{output.html}"
        		flags="gs"
        		match="\$\{version_major\}"
        		replace="@{version.major}"/>
        	<replaceregexp 
        		file="@{output.html}"
        		flags="gs"
        		match="\$\{version_minor\}"
        		replace="@{version.minor}"/>
        	<replaceregexp 
        		file="@{output.html}"
        		flags="gs"
        		match="\$\{version_revision\}"
        		replace="@{version.revision}"/>
        	<replaceregexp 
        		file="@{output.html}"
        		flags="gs"
        		match="\$\{application\}"
        		replace="@{application}"/>
        	<replaceregexp 
        		file="@{output.html}"
        		flags="gs"
        		match="\$\{bgcolor\}"
        		replace="@{bgcolor}"/>
        	<replaceregexp 
        		file="@{output.html}"
        		flags="gs"
        		match="\$\{swf\}"
        		replace="@{swf}"/>
        </sequential>
    </macrodef>
</project>